if(BUILD_MESHING)
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/stack/api")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/prov/api")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/prov/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/access/api")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/access/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/dfu/api")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/dfu/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/core/api")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/core/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/bearer/api")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/bearer/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/gatt/api")
	include_directories(SYSTEM "${MESH_SDK_DIR}/mesh/gatt/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/models/foundation/config/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/models/foundation/health/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/models/model_spec/common/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/models/model_spec/generic_onoff/include")
	include_directories(SYSTEM "${MESH_SDK_DIR}/external/micro-ecc")
	include_directories(SYSTEM "${MESH_SDK_DIR}/examples/common/include")
	if(MESH_MEM_BACKEND STREQUAL "mem_manager")
		include_directories(SYSTEM "${NRF5_DIR}/components/libraries/mem_manager")
	endif()
endif() # BUILD_MESHING