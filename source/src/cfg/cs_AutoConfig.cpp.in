// Needs to be static
#define CS_RAM_MICROAPP_END (@RAM_MICROAPP_BASE@ + @RAM_MICROAPP_AMOUNT@)

#include <cfg/cs_AutoConfig.h>

#include <cfg/cs_Boards.h>

#define CS_FIRMWARE_VERSION "@FIRMWARE_VERSION@"
const char g_FIRMWARE_VERSION[] = CS_FIRMWARE_VERSION;

#define CS_COMPILATION_DAY "@COMPILATION_DAY@"
const char g_COMPILATION_DAY[] = CS_COMPILATION_DAY;

#define CS_BUILD_TYPE "@CMAKE_BUILD_TYPE@"
const char g_BUILD_TYPE[] = CS_BUILD_TYPE;

#define CS_BEACON_UUID "@BEACON_UUID@"
const char g_BEACON_UUID[] = CS_BEACON_UUID;

const uint16_t g_BEACON_MAJOR = @BEACON_MAJOR@;

const uint16_t g_BEACON_MINOR = @BEACON_MINOR@;

const uint8_t g_BEACON_RSSI = @BEACON_RSSI@;

uint32_t g_APPLICATION_START_ADDRESS = @APPLICATION_START_ADDRESS@;

uint32_t g_APPLICATION_LENGTH = @APPLICATION_LENGTH@;

uint32_t g_RAM_R1_BASE = @RAM_R1_BASE@;

uint32_t g_RAM_APPLICATION_AMOUNT = @RAM_APPLICATION_AMOUNT@;

// The address of where to write the hardware board type (it is a UICR register)
uint32_t g_HARDWARE_BOARD_ADDRESS = @HARDWARE_BOARD_ADDRESS@;

// The default hardware board
uint32_t g_DEFAULT_HARDWARE_BOARD = @DEFAULT_HARDWARE_BOARD@;

// Start of flash for microapps
uint32_t g_FLASH_MICROAPP_BASE = @FLASH_MICROAPP_BASE@;

// Number of pages
uint8_t g_FLASH_MICROAPP_PAGES = @FLASH_MICROAPP_PAGES@;

uint32_t g_RAM_MICROAPP_BASE = @RAM_MICROAPP_BASE@;

uint32_t g_RAM_MICROAPP_AMOUNT = @RAM_MICROAPP_AMOUNT@;

uint8_t g_MAX_CHIP_TEMPERATURE = @MAX_CHIP_TEMP@;

uint16_t g_BOOT_DELAY = @BOOT_DELAY@;

uint16_t g_SCAN_DURATION = @SCAN_DURATION@;

uint16_t g_SCAN_BREAK_DURATION = @SCAN_BREAK_DURATION@;

uint16_t g_ADVERTISEMENT_INTERVAL = @ADVERTISEMENT_INTERVAL@;

uint16_t g_TX_POWER = @TX_POWER@;


