name: Bluenet
on: [push, pull_request, release]
jobs:
  Build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/crownstone/bluenet:latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Prepare dependencies
        run: |
          echo "üñ•Ô∏è Prepare dependencies by symlinking to /bluenet/tools and add some to $PATH"
          ln -s /bluenet/tools tools
          echo "/bluenet/tools/gcc_arm_none_eabi/bin" >> $GITHUB_PATH
          echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Show versions
        shell: bash
        run: |
          echo "üñ•Ô∏è Show some versions of dependencies."
          arm-none-eabi-gcc --version
          cmake --version
      - name: Create build dir
        run: |
          mkdir build
      - name: Run cmake
        working-directory: ./build
        run: |
          cmake .. -DREQUIRE_NRFJPROG=OFF -DREQUIRE_JLINK=OFF -DCOMPILE_FOR_HOST=ON
      - name: Run make
        working-directory: ./build
        run: |
          make
      - name: Run tests
        working-directory: ./build/host/default
        run: |
          ctest
      - name: Finish up
        run: |
          echo "üçè This job's status is ${{ job.status }}."
  Test:
    if: ${{ github.repository_owner == 'crownstone' }}
    runs-on: [self-hosted, Linux, X64]
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by Crownstone!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - name: Prepare dependencies
        run: |
          echo "üñ•Ô∏è Prepare dependencies by symlinking to /bluenet/tools and add some to $PATH"
          ln -s /bluenet/tools tools
          echo "/bluenet/tools/gcc_arm_none_eabi/bin" >> $GITHUB_PATH
          echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Create build dir
        run: |
          mkdir build
      - name: Run cmake
        working-directory: ./build
        run: |
          cmake .. -DREQUIRE_NRFJPROG=OFF -DREQUIRE_JLINK=OFF -DCOMPILE_FOR_HOST=ON
      - name: Run make
        working-directory: ./build
        run: |
          make
      - name: Run tests
        working-directory: ./build/host/default
        run: |
          ctest
      - name: Finish up
        run: |
          echo "üçè This job's status is ${{ job.status }}."
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@master
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          folder-path: 'docs/'
          config-file: 'docs/mlc_config.json'
          max-depth: -1
      - name: Finish up
        run: |
          echo "üçè This job's status is ${{ job.status }}."
